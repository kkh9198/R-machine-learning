library(tidyverse)
install.packages("gmodels")
library(gmodels)
install.packages("reghelper")
library(reghelper)
install.packages("caret")
library(caret)
library(MLmetrics)
library(pROC)
install.packages("caret")
url<-'https://bit.ly/university_admit'
guess_encoding(url)
df<-read.csv(url)


#str()함수를 실행하는 이유
#컬럼별 벡터 자료형을 확인하기 위해 
str(df)
head(df,10)

#summary()함수를 실행하는 이유
#컬럼별 기술 통계량을 빠르게 확인하기 위해
#이상치 감지하여 값을 대체한다.
summary(df)


df$admit<-as.factor(df$admit)

vars<-c(1,4)
df[vars]<-map_df(df[vars],as.factor)

##shift + ctrl + m (%>%)파이프연산자 출력

df$admit %>% table() %>% prop.table()*100

boxplot(gre~admit,
        df,
        col='Red')

avg<-df %>% group_by(admit) %>% summarise(m=mean(gre))




points(m~admit,
       avg,
       pch=19,
       col='blue',
       size=1.3)

by(df$gre, df$admit, shapiro.test)
wilcox.test(gre~admit,df)

CrossTable(df$rank,df$admit)
chisq.test(df$rank,df$admit)


n<-nrow(df)
set.seed(1234)
index<-sample(n,n*0.7,FALSE)
train<-df %>% slice(index)
test<-df %>% slice(-index)

train$admit %>% table() %>% prop.table()*100
test$admit %>% table() %>% prop.table()*100


fit1<-glm(admit ~.,data=train,family=binomial(link='logit'))

#회귀계수
fit1$coefficients %>% exp( ) %>% round(4)

beta.z<-beta(fit1)
beta.z$coefficients[,1] %>% round(4)



real<-test$admit
print(real)


prob1<-predict(fit1,test,'response')
print(prob1)

pred1<-ifelse(prob1>=0.5,1,0) %>% as.factor()
print(pred1)
confusionMatrix()


library(MLmetrics)
F1_Score(y_true = real, y_pred = pred1, positive = '1')

library(pROC)
roc(response = real, predictor = prob1) %>% 
  plot(main = 'ROC Curve', col = 'red', lty = 1)

roc(response = real, predictor = as.numeric(x = pred1)) %>% 
  plot(col = 'blue', lty = 2, lwd = 2, add = TRUE)





